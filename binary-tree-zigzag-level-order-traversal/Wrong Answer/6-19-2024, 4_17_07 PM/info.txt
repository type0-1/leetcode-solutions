{"id":1293655175,"question_id":103,"lang":"python3","lang_name":"Python3","time":"2 weeks, 2 days","timestamp":1718810227,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1293655175/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom queue import Queue\nclass Solution:\n    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        if root is None:\n            return root\n\n        flag = False\n        q = Queue()\n        q.put(root)\n        res = [[root.val]]\n\n        while not q.empty():\n            node = q.get()\n            arr = []\n            if node.left:\n                arr.append(node.left.val)\n                q.put(node.left)\n            if node.right:\n                arr.append(node.right.val)\n                q.put(node.right)\n            if arr != []:\n                if not flag:\n                    flag = True\n                    res.append(arr[::-1])\n                else:\n                    flag = False\n                    res.append(arr)\n        return res\n","compare_result":"111111101101101000001000000100000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}