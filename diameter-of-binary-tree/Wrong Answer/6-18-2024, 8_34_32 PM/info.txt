{"id":1292810474,"question_id":543,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1718739272,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1292810474/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom queue import Queue\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        left = 0\n        right = 0\n\n        q = Queue()\n        q.put(root)\n\n        while not q.empty():\n            node = q.get()\n            if node.left:\n                left += 1\n                q.put(node.left)\n            if node.right:\n                right += 1\n                q.put(node.right)\n        \n        if root.left and root.right:\n            return left+right-1\n        elif root.right is None:\n            return left\n        elif root.left is None:\n            return right\n","compare_result":"1111100011010000000100110110001100000010000000000000000010100100100111010111000001101000000000000000000001","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}