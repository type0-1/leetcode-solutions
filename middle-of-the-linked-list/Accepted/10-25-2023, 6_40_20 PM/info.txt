{"id":1084000292,"question_id":908,"lang":"python3","lang_name":"Python3","time":"8 months, 2 weeks","timestamp":1698255620,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/1084000292/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"16.1 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:\n\n        curr = head\n        length = 0\n\n        while curr != None:\n            length += 1\n            curr = curr.next\n\n        mid = 0\n\n        if length % 2 == 0:\n            mid = (length // 2)\n        else:\n            mid = length // 2\n        \n        pos = 0 \n        curr = head\n\n        while pos != mid:\n            curr = curr.next\n            pos += 1\n        \n        return curr\n\n\n\n        ","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}