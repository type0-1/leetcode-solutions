{"id":1280701087,"question_id":382,"lang":"python3","lang_name":"Python3","time":"4Â weeks","timestamp":1717776526,"status":10,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/1280701087/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"19.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nimport random\nclass Solution:\n\n    def __init__(self, head: Optional[ListNode]):\n        self.head = head \n        \n\n    def getRandom(self) -> int:\n        length = 0\n\n        temp = self.head\n        while temp:\n            length += 1\n            temp = temp.next\n        \n        node = self.head\n        for _ in range(random.randint(0, length-1)):\n            node = node.next\n        \n        return node.val\n\n\n# Your Solution object will be instantiated and called as such:\n# obj = Solution(head)\n# param_1 = obj.getRandom()","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false,"flag_type":1}