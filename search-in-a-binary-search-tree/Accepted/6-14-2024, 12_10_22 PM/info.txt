{"id":1288035847,"question_id":783,"lang":"python3","lang_name":"Python3","time":"3 weeks, 1 day","timestamp":1718363422,"status":10,"status_display":"Accepted","runtime":"95 ms","url":"/submissions/detail/1288035847/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"18.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom queue import Queue\n\nclass Solution:\n    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:\n        if root.val == val:\n            return root\n        \n        q = Queue()\n        q.put(root)\n\n        while not q.empty():\n            root = q.get()\n            if root.val == val:\n                return root\n            if root.left is not None:\n                q.put(root.left)\n            if root.right is not None:\n                q.put(root.right)\n        \n        return None\n","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}