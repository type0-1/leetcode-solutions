{"id":1288283063,"question_id":1497,"lang":"python3","lang_name":"Python3","time":"3Â weeks","timestamp":1718381707,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/1288283063/","is_pending":"Not Pending","title":"Design a Stack With Increment Operation","memory":"17.4 MB","code":"class CustomStack:\n\n    def __init__(self, maxSize: int):\n        self.stack = []\n        self.maxSize = maxSize\n\n    def push(self, x: int) -> None:\n        if self.maxSize == len(self.stack):\n            return \n        self.stack.append(x)\n        \n\n    def pop(self) -> int:\n        if self.stack == []:\n            return -1\n        return self.stack.pop()\n        \n    def increment(self, k: int, val: int) -> None:\n        if len(self.stack) < k:\n            self.stack = [n+val for n in self.stack]\n        else:\n            for i in range(k):\n                self.stack[i]+=val\n\n# Your CustomStack object will be instantiated and called as such:\n# obj = CustomStack(maxSize)\n# obj.push(x)\n# param_2 = obj.pop()\n# obj.increment(k,val)","compare_result":"1111111111111111111111111111111111","title_slug":"design-a-stack-with-increment-operation","has_notes":false,"flag_type":1}