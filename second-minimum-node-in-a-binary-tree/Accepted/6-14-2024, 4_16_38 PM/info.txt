{"id":1288231695,"question_id":671,"lang":"python3","lang_name":"Python3","time":"3Â weeks","timestamp":1718378198,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/1288231695/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"16.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom queue import Queue\nclass Solution:\n    def findSecondMinimumValue(self, root: Optional[TreeNode]) -> int:\n        q = Queue()\n        q.put(root)\n        val = root.val\n        nums = []\n        while not q.empty():\n            node = q.get()\n            if val < node.val:\n                nums.append(node.val)\n            if node.left is not None:\n                q.put(node.left)\n            if node.right is not None:\n                q.put(node.right)\n        if nums == []:\n            return -1\n        return sorted(nums)[0]\n","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}