{"id":1288229147,"question_id":671,"lang":"python3","lang_name":"Python3","time":"3Â weeks","timestamp":1718378021,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1288229147/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom queue import Queue\nclass Solution:\n    def findSecondMinimumValue(self, root: Optional[TreeNode]) -> int:\n        q = Queue()\n        q.put(root)\n        val = root.val\n        while not q.empty():\n            node = q.get()\n            if val < node.val:\n                return node.val\n            if node.left is not None:\n                q.put(node.left)\n            if node.right is not None:\n                q.put(node.right)\n        return -1 ","compare_result":"111111111111111111111101111111111111011","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}