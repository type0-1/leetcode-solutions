{"id":1282155476,"question_id":142,"lang":"python3","lang_name":"Python3","time":"3 weeks, 6 days","timestamp":1717888029,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/1282155476/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"19.4 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        if head is None:\n            return None \n        \n        i = 0\n        node = head\n        dic = {}\n\n        while node:\n            if node in dic:\n                return node\n            else:\n                dic[node] = True\n            i += 1\n            node = node.next\n        \n        return node\n\n        ","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":true,"flag_type":1}