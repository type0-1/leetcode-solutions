{"id":1292802319,"question_id":100,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 3Â days","timestamp":1718738664,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/1292802319/","is_pending":"Not Pending","title":"Same Tree","memory":"16.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom queue import Queue\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        nums = []\n        self.count = 0\n        def traverse(root):\n            if root is None:\n                nums.append(\"null\")\n                self.count += 1\n                return\n            \n            nums.append(root.val)\n            self.count += 1\n            traverse(root.left)\n            traverse(root.right)\n        \n        traverse(p)\n        m = self.count\n        traverse(q)\n\n        if self.count//2 != m:\n            return False\n            \n        return nums[:self.count//2] == nums[self.count//2:]\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}