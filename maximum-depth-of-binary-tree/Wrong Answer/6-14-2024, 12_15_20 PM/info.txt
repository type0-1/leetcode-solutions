{"id":1288039794,"question_id":104,"lang":"python3","lang_name":"Python3","time":"3 weeks, 1 day","timestamp":1718363720,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1288039794/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom queue import Queue\nclass Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -> int:\n        if root is None:\n            return 1\n\n        LD = 1\n        RD = 1\n        \n        q = Queue()\n        q.put(root)\n\n        while not q.empty():\n            root = q.get()\n            if root.left is not None:\n                q.put(root.left)\n                LD += 1\n            if root.right is not None:\n                q.put(root.right)\n                RD += 1\n        \n        return max(LD, RD)","compare_result":"110111111111000010101101010000010000000","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}