{"id":1282823746,"question_id":2216,"lang":"python3","lang_name":"Python3","time":"3 weeks, 6 days","timestamp":1717936592,"status":10,"status_display":"Accepted","runtime":"574 ms","url":"/submissions/detail/1282823746/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"51 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        if head is None or head and head.next is None:\n            return None \n        \n        slow = fast = prev = head\n\n        while fast and fast.next:\n            prev = slow\n            slow = slow.next\n            fast = fast.next.next\n        \n        prev.next = slow.next\n\n        return head\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}