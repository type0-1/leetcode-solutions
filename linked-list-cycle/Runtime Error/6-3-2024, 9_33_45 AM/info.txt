{"id":1276132373,"question_id":141,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1717403625,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1276132373/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        \n        if head is None or head.next is None\n\n        slow = fast = head\n\n        while fast != None and fast.next != None:\n            slow = slow.next\n            fast = fast.next.next\n\n            if slow.val == fast.val:\n                return True\n        \n        return False","compare_result":"00000000000000000000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}