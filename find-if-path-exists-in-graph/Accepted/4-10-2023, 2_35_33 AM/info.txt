{"id":931006284,"question_id":2121,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1681090533,"status":10,"status_display":"Accepted","runtime":"2571 ms","url":"/submissions/detail/931006284/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"303.4 MB","code":"class Solution:\n    def validPath(self, n: int, edges: List[List[int]], source: int, destination: int) -> bool:\n        self.graph = {i : [] for i in range(n)}\n        self.visited = [False] * n\n        self.marked = [-1] * n\n        for edge in edges:\n            self.graph[edge[0]].append(edge[1])\n            self.graph[edge[1]].append(edge[0])\n        def dfs(vertex):\n           self.visited[vertex] = True\n           for node in self.graph[vertex]:\n               if not self.visited[node]:\n                   self.marked[node] = vertex\n                   dfs(node)\n        dfs(source)\n        if self.visited[source] and self.visited[destination]:\n            return True\n        return False","compare_result":"11111111111111111111111111111","title_slug":"find-if-path-exists-in-graph","has_notes":false,"flag_type":1}