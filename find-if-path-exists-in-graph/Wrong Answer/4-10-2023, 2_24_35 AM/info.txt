{"id":931003047,"question_id":2121,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1681089875,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/931003047/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"N/A","code":"class Solution:\n    def validPath(self, n: int, edges: List[List[int]], source: int, destination: int) -> bool:\n        self.graph = {i : [] for i in range(n)}\n        self.visited = [False] * n\n        self.marked = [-1] * n\n        for edge in edges:\n            self.graph[edge[0]].append(edge[1])\n            self.graph[edge[1]].append(edge[0])\n        def dfs(vertex):\n           self.visited[vertex] = True\n           for node in self.graph[vertex]:\n               if not self.visited[node]:\n                   self.marked[node] = vertex\n                   dfs(node)\n        dfs(source)\n        print(self.marked, self.visited)\n        def hasPathTo(vertex):\n            return self.visited[vertex]\n        \n        def pathTo(vertex):\n            if not hasPathTo(vertex):\n                return []\n            \n            path = [vertex]\n            print(path)\n        \n        print(pathTo(source))\n\n\n\n","compare_result":"01001000100010001001000000001","title_slug":"find-if-path-exists-in-graph","has_notes":false,"flag_type":1}