{"id":1292643167,"question_id":1005,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1718729849,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1292643167/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"16.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom queue import Queue\nclass Solution:\n    def isUnivalTree(self, root: Optional[TreeNode]) -> bool:\n        if root.left is None and root.right is None:\n            return True\n        \n        num = root.val\n\n        q = Queue()\n        q.put(root)\n\n        while not q.empty():\n            node = q.get()\n            if node.val != num:\n                return False\n            if node.left:\n                q.put(node.left)\n            if node.right:\n                q.put(node.right)\n        \n        return True\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}