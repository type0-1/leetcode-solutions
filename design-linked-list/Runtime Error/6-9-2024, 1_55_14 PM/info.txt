{"id":1282838841,"question_id":838,"lang":"python3","lang_name":"Python3","time":"3 weeks, 6 days","timestamp":1717937714,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1282838841/","is_pending":"Not Pending","title":"Design Linked List","memory":"N/A","code":"class Node:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = None\n\nclass MyLinkedList:\n    def __init__(self):\n        self.head = None\n        self.tail = None\n        self.length = 0\n        \n    def get(self, index: int) -> int:\n        if index < 0 or index > self.length:\n            return -1\n        elif index == 0:\n            return self.head.val\n        elif index == self.length:\n            return self.tail.val\n        node = self.head\n        for _ in range(index):\n            node = node.next\n        return node.val\n\n    def addAtHead(self, val: int) -> None:\n        node = Node(val)\n\n        if self.head is None:\n            self.head = node\n            self.tail = node\n            self.length += 1\n        else:\n            node.next = self.head\n            self.length += 1\n            self.head = node\n\n    def addAtTail(self, val: int) -> None:\n        node = Node(val)\n\n        if self.tail is None:\n            self.addAtHead(val)\n            return\n\n        self.tail.next = node\n        node.next = None\n        self.tail = node\n        self.length += 1\n\n    def addAtIndex(self, index: int, val: int) -> None:\n        if index < 0 or index > self.length:\n            return \n        elif index == 0:\n            self.addAtHead(val)\n        elif index == self.length:\n            self.addAtTail(val)\n        else:\n            node = Node(val)\n            prev = self.head\n            curr = self.head\n\n            for _ in range(index):\n                prev = curr\n                curr = curr.next\n            \n            prev.next = node\n            node.next = curr\n            self.length += 1\n\n    def deleteAtIndex(self, index: int) -> None:\n        if index < 0 or index > self.length:\n            return\n        elif index == 0:\n            if self.head == self.tail:\n                self.head = None\n                self.tail = None\n                self.length -= 1\n            else:\n                self.head = self.head.next\n                self.length -= 1\n        elif index == self.length:\n            prev = curr = self.head\n\n            while curr.next != self.tail:\n                prev = curr\n                curr = curr.next\n\n            prev.next = curr.next\n            self.length -= 1\n        else:\n            prev = curr = self.head\n            for _ in range(index):\n                prev = curr\n                curr = curr.next\n            prev.next = curr.next\n\n        \n\n\n# Your MyLinkedList object will be instantiated and called as such:\n# obj = MyLinkedList()\n# param_1 = obj.get(index)\n# obj.addAtHead(val)\n# obj.addAtTail(val)\n# obj.addAtIndex(index,val)\n# obj.deleteAtIndex(index)","compare_result":"11111111000000000000000000000000000000000000000000000000000000000","title_slug":"design-linked-list","has_notes":false,"flag_type":1}