{"id":1288026584,"question_id":1498,"lang":"python3","lang_name":"Python3","time":"3 weeks, 1 day","timestamp":1718362734,"status":10,"status_display":"Accepted","runtime":"409 ms","url":"/submissions/detail/1288026584/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"24.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nfrom queue import Queue\n\nclass Solution:\n    def getTargetCopy(self, original: TreeNode, cloned: TreeNode, target: TreeNode) -> TreeNode:\n        if original.val == cloned.val and original.val == target.val:\n            return cloned\n        \n        q = Queue()\n        q.put(cloned)\n\n        while not q.empty():\n            root = q.get()\n            if root.val == target.val:\n                return root\n            if root.left is not None:\n                q.put(root.left)\n            if root.right is not None:\n                q.put(root.right)\n        \n        return None ","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false,"flag_type":1}